{"version":3,"sources":["components/Note.js","components/Notification.js","components/Footer.js","services/notes.js","App.js","index.js"],"names":["Note","note","toggleImportance","label","important","className","content","onClick","Notification","message","Footer","style","color","fontStyle","fontSize","baseUrl","request","axios","get","nonExisting","id","date","then","response","data","concat","newObject","post","put","App","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","errorMessage","setErrorMessage","useEffect","noteService","initialNotes","notesToShow","filter","map","i","find","n","changedNote","updatedNote","catch","error","setTimeout","toggleImportanceOf","onSubmit","event","preventDefault","noteObject","Date","toISOString","Math","random","addedNote","value","onChange","target","type","ReactDOM","render","document","getElementById"],"mappings":"sMAaeA,EAXF,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,iBACdC,EAAQF,EAAKG,UAAY,qBAAuB,iBAEtD,OACE,qBAAIC,UAAU,OAAd,UACGJ,EAAKK,QACN,wBAAQC,QAASL,EAAjB,SAAoCC,QCA3BK,EANM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAgB,OAAZA,EAAyB,KAEtB,qBAAKJ,UAAU,QAAf,SAAwBI,KCalBC,EAhBA,WAMb,OACE,sBAAKC,MANa,CAClBC,MAAO,QACPC,UAAW,SACXC,SAAU,IAGV,UACE,uBACA,2GCVAC,EAAU,aAuBD,EArBA,WACb,IAAMC,EAAUC,IAAMC,IAAIH,GACpBI,EAAc,CAClBC,GAAI,IACJd,QAAS,mCACTe,KAAM,2BACNjB,WAAW,GAEb,OAAOY,EAAQM,MAAK,SAACC,GAAD,OAAcA,EAASC,KAAKC,OAAON,OAa1C,EAVA,SAACO,GAEd,OADgBT,IAAMU,KAAKZ,EAASW,GACrBJ,MAAK,SAACC,GAAD,OAAcA,EAASC,SAQ9B,EALA,SAACJ,EAAIM,GAElB,OADgBT,IAAMW,IAAN,UAAab,EAAb,YAAwBK,GAAMM,GAC/BJ,MAAK,SAACC,GAAD,OAAcA,EAASC,SCgE9BK,EA9EH,WAAO,IAAD,EACUC,mBAAS,IADnB,mBACTC,EADS,KACFC,EADE,OAEcF,mBAAS,iBAFvB,mBAETG,EAFS,KAEAC,EAFA,OAGcJ,oBAAS,GAHvB,mBAGTK,EAHS,KAGAC,EAHA,OAIwBN,mBAAS,MAJjC,mBAITO,EAJS,KAIKC,EAJL,KAMhBC,qBAAU,WACRC,IAAqBlB,MAAK,SAACmB,GACzBT,EAASS,QAEV,IAEH,IAqCMC,EAAcP,EAAUJ,EAAQA,EAAMY,QAAO,SAAC1C,GAAD,OAAUA,EAAKG,aAElE,OACE,gCACE,uCACA,cAAC,EAAD,CAAcK,QAAS4B,IACvB,8BACE,yBAAQ9B,QAAS,kBAAM6B,GAAYD,IAAnC,kBACQA,EAAU,YAAc,WAGlC,6BACGO,EAAYE,KAAI,SAAC3C,EAAM4C,GAAP,OACf,cAAC,EAAD,CAEE5C,KAAMA,EACNC,iBAAkB,kBArCD,SAACkB,GAC1B,IAAMnB,EAAO8B,EAAMe,MAAK,SAACC,GAAD,OAAOA,EAAE3B,KAAOA,KAClC4B,EAAW,2BAAQ/C,GAAR,IAAcG,WAAYH,EAAKG,YAEhDoC,EACUpB,EAAI4B,GACX1B,MAAK,SAAC2B,GACLjB,EAASD,EAAMa,KAAI,SAAC3C,GAAD,OAAWA,EAAKmB,KAAOA,EAAKnB,EAAOgD,SAEvDC,OAAM,SAACC,GACNb,EAAgB,SAAD,OACJrC,EAAKK,QADD,sCAIf8C,YAAW,WACTd,EAAgB,QACf,KACHN,EAASD,EAAMY,QAAO,SAACI,GAAD,OAAOA,EAAE3B,KAAOA,SAoBViC,CAAmBpD,EAAKmB,MAF3CyB,QAMX,uBAAMS,SAzDM,SAACC,GACfA,EAAMC,iBACN,IAAMC,EAAa,CACjBnD,QAAS2B,EACTZ,MAAM,IAAIqC,MAAOC,cACjBvD,UAAWwD,KAAKC,SAAW,IAG7BrB,EAAmBiB,GAAYnC,MAAK,SAACwC,GACnC9B,EAASD,EAAMN,OAAOqC,IACtB5B,EAAW,QA+CX,UACE,uBAAO6B,MAAO9B,EAAS+B,SA5CJ,SAACT,GAAD,OAAWrB,EAAWqB,EAAMU,OAAOF,UA6CtD,wBAAQG,KAAK,SAAb,qBAEF,cAAC,EAAD,Q,MC3ENC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.5045568c.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Note = ({ note, toggleImportance }) => {\n  const label = note.important ? \"make not important\" : \"make important\";\n\n  return (\n    <li className=\"note\">\n      {note.content}\n      <button onClick={toggleImportance}>{label}</button>\n    </li>\n  );\n};\n\nexport default Note;\n","import React from \"react\";\n\nconst Notification = ({ message }) => {\n  if (message === null) return null;\n\n  return <div className=\"error\">{message}</div>;\n};\n\nexport default Notification;\n","import React from \"react\";\n\nconst Footer = () => {\n  const footerStyle = {\n    color: \"green\",\n    fontStyle: \"italic\",\n    fontSize: 16,\n  };\n  return (\n    <div style={footerStyle}>\n      <br />\n      <em>\n        Note app, Department of Computer Science, University of Helsinki 2020\n      </em>\n    </div>\n  );\n};\n\nexport default Footer;","import axios from \"axios\";\nconst baseUrl = \"/api/notes\"; // \"https://pacific-sea-85054.herokuapp.com/api/notes\"; // \"http://localhost:3001/api/notes\";\n\nconst getAll = () => {\n  const request = axios.get(baseUrl);\n  const nonExisting = {\n    id: 10000,\n    content: \"This note is not saved to server\",\n    date: \"2019-05-30T17:30:31.098Z\",\n    important: true,\n  };\n  return request.then((response) => response.data.concat(nonExisting));\n};\n\nconst create = (newObject) => {\n  const request = axios.post(baseUrl, newObject);\n  return request.then((response) => response.data);\n};\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject);\n  return request.then((response) => response.data);\n};\n\nexport default { getAll, create, update };\n\n// export default noteService;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Note from \"./components/Note\";\nimport Notification from \"./components/Notification\";\nimport Footer from \"./components/Footer\"\nimport noteService from \"./services/notes\";\n\nconst App = () => {\n  const [notes, setNotes] = useState([]);\n  const [newNote, setNewNote] = useState(\"a new note...\");\n  const [showAll, setShowAll] = useState(true);\n  const [errorMessage, setErrorMessage] = useState(null);\n\n  useEffect(() => {\n    noteService.getAll().then((initialNotes) => {\n      setNotes(initialNotes);\n    });\n  }, []);\n\n  const addNote = (event) => {\n    event.preventDefault();\n    const noteObject = {\n      content: newNote,\n      date: new Date().toISOString(),\n      important: Math.random() < 0.5,\n    };\n\n    noteService.create(noteObject).then((addedNote) => {\n      setNotes(notes.concat(addedNote));\n      setNewNote(\"\");\n    });\n  };\n\n  const handleNoteChange = (event) => setNewNote(event.target.value);\n\n  const toggleImportanceOf = (id) => {\n    const note = notes.find((n) => n.id === id);\n    const changedNote = { ...note, important: !note.important };\n\n    noteService\n      .update(id, changedNote)\n      .then((updatedNote) => {\n        setNotes(notes.map((note) => (note.id !== id ? note : updatedNote)));\n      })\n      .catch((error) => {\n        setErrorMessage(\n          `Note '${note.content}' was already removed from server`\n        );\n        // remove error message after 5 sec\n        setTimeout(() => {\n          setErrorMessage(null);\n        }, 5000);\n        setNotes(notes.filter((n) => n.id !== id));\n      });\n  };\n\n  const notesToShow = showAll ? notes : notes.filter((note) => note.important);\n\n  return (\n    <div>\n      <h1>Notes</h1>\n      <Notification message={errorMessage} />\n      <div>\n        <button onClick={() => setShowAll(!showAll)}>\n          show {showAll ? \"important\" : \"all\"}\n        </button>\n      </div>\n      <ul>\n        {notesToShow.map((note, i) => (\n          <Note\n            key={i}\n            note={note}\n            toggleImportance={() => toggleImportanceOf(note.id)}\n          />\n        ))}\n      </ul>\n      <form onSubmit={addNote}>\n        <input value={newNote} onChange={handleNoteChange} />\n        <button type=\"submit\">save</button>\n      </form>\n      <Footer />\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\"\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}